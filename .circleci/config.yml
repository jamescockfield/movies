version: 2.1

orbs:
  node: circleci/node@5.0.2
  docker: circleci/docker@2.1.1

jobs:
  build-and-test-frontend:
    docker:
      - image: cimg/node:20.10
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
          app-dir: ./frontend
          cache-path: ./frontend/node_modules
      - run:
          name: Run frontend tests
          command: cd frontend && npm run test
      - persist_to_workspace:
          root: .
          paths:
            - frontend

  build-and-test-backend:
    docker:
      - image: cimg/node:20.10
      - image: mongo:latest
        name: mongodb
    steps:
      - checkout
      - node/install-packages:
          pkg-manager: npm
          app-dir: ./backend
          cache-path: ./backend/node_modules
      - run:
          name: Run backend tests
          command: cd backend && npm run test
      - persist_to_workspace:
          root: .
          paths:
            - backend

  build-docker-images:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - setup_remote_docker:
          docker_layer_caching: true
      - attach_workspace:
          at: .
      - docker/build:
          image: $DOCKER_IMAGE_FRONTEND
          path: ./frontend
      - docker/build:
          image: $DOCKER_IMAGE_BACKEND
          path: ./backend
      - docker/push:
          image: $DOCKER_IMAGE_FRONTEND
      - docker/push:
          image: $DOCKER_IMAGE_BACKEND

  deploy:
    docker:
      - image: cimg/base:current
    steps:
      - checkout
      - add_ssh_keys:
          fingerprints:
            - "$SSH_KEY_FINGERPRINT"
      - run:
          name: Deploy to server
          command: |
            ssh $SSH_USER@$SSH_HOST "cd ~/app && \
            docker-compose pull && \
            docker-compose up -d --force-recreate"

workflows:
  version: 2
  build-test-deploy:
    jobs:
      - build-and-test-frontend
      - build-and-test-backend
      - build-docker-images:
          requires:
            - build-and-test-frontend
            - build-and-test-backend
      - deploy:
          requires:
            - build-docker-images
          filters:
            branches:
              only: main
